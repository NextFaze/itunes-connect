= appstore

This gem provides a very simple command-line utility and backing
"library" (if I can be so bold to use the term in this context) for
accessing sales reports from Apple's iTunes Connect website. If you
want to automate getting reports out of the App Store, this tool is
for you.

== Usage

=== Command-Line Usage

This gem comes with the <tt>appstore</tt> executable which you can use
to download reports, import into a sqlite database and report
from.

You can specify the default values for a handful of command-line
options by putting them in a file named <tt>.itunesrc</tt> in your
home directory. The file is in YAML format and should look something
like this:

  --- 
  :username: myusername
  :password: mysekrets3key
  :database: /my/appstore/database.db

==== Downloading Reports
You can download reports from iTunes Connect using <tt>appstore
download</tt>. You may specify your iTunes Connect credentials on
the command line _or_ you can put them in YAML format in
<tt>~/.itunesrc</tt> with the keys of <tt>:username</tt> and
<tt>:password</tt>.

You can also dump the report to a file (or standard out):

  appstore download -o /tmp/report.txt

Or you can dump it directly into a sqlite3 database:

  appstore download -b /tmp/report.db

By default the <tt>download</tt> command will retrieve the most recent
daily report. If you have a <tt>database</tt> key in your
<tt>~/.itunesrc</tt> file and you _don't_ specify an out file, the
report will be automatically imported into the database.

You can also ask for weekly or monthly reports by using the
<tt>-r</tt> command-line option. Note that you can _not_ import a
montly report directly into the database because the monthly reports
don't have any days associated with the entries.

Run <tt>appstore help download</tt> for full usage details.

==== Importing Reports
The <tt>import</tt> command allows you to dump an existing report file
into the database. This is useful if you've already downloaded a
number of reports from iTunes Connect and you just want to put them
into the database.

Run <tt>appstore help import</tt> for full usage details.

==== Reporting
The <tt>report</tt> command queries your database and can produce
either detailed, or grouped output. In both cases you can constrain
the query to any combination of country, start date and end date.

Run <tt>appstore help report</tt> for full usage details.

=== Programmatic Usage

See the documentation for the AppStore::Connection,
AppStore::Report and AppStore::Store classes for details.

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but
   bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2009 Alex Vollmer. See LICENSE for details.
