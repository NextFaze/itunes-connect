#!/usr/bin/env ruby

require "appstore"
require "clip"

opts = Clip do |c|
  c.opt('u', 'username', :desc => 'iTunes Connect username')
  c.opt('p', 'password', :desc => 'iTunes Connect password')
  c.flag('g', 'debug', :desc => 'Dump HTTP requests for debugging')
  c.opt('d', 'date', :desc => 'Daily report date (MM/DD/YYYY format)',
        :default => (Date.today - 1).strftime('%m/%d/%Y'))
  c.opt('o', 'out', :desc => 'Dump report to file, - is stdout')
  c.opt('b', 'db', :desc => 'Dump report to sqlite DB at the given path')
end

itunesrc = File.expand_path("~/.itunesrc")
if opts.username.nil? and opts.password.nil? and !File.exist?(itunesrc)
  $stderr.puts "You must either specify -u and -p or put your credentials"
  $stderr.puts "in #{itunesrc} in YAML format."
  abort opts.to_s
end

username, password = if opts.username.nil? && opts.password.nil?
                       creds = YAML.load_file(itunesrc)
                       [creds[:username], creds[:password]]
                     else
                       [opts.username, opts.password]
                     end

itc = AppStore::Connect.new(username, password)
itc.debug = opts.debug?

report = itc.get_report
if opts.out
  out = opts.out == '-' ? STDOUT : File.new(opts.out, 'w')
  out << report
  out.flush
  out.close
end

if opts.db
  store = AppStore::Store.new(opts.db)
  data = Hash.new { |h,k| h[k] = { }}
  report.lines.to_a[1..-1].each do |line|
    tokens = line.split("\t")
    country = tokens[13]
    count = tokens[9].to_i
    case tokens[8].to_i
    when 7
      data[country][:upgrade] = count
    when 1
      data[country][:install] = count
    end
  end

  import_count = 0
  data.each do |country, data|
    import_count += 1 if store.add(opts.date,
                                   country,
                                   data[:upgrade],
                                   data[:install])
  end
  puts "Imported #{import_count} row#{import_count == 1 ? nil : 's'} for #{opts.date}"
end
